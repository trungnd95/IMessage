# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Conversation {
  createdAt: DateTime!
  id: ID!
  lastestMessage: Message
  participants: [Participant!]!
  updatedAt: DateTime!
}

type ConversationMutationResponse implements MutationResponse {
  code: Float!
  conversation: Conversation
  message: String
  success: Boolean!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Message {
  body: String!
  conversationId: String!
  createdAt: DateTime!
  id: String!
  sender: User!
  updatedAt: DateTime!
}

input MessageInput {
  body: String!
  conversationId: ID!
  id: ID!
  senderId: ID!
}

type MessageMutationResponse implements MutationResponse {
  code: Float!
  message: String
  messageData: Message
  success: Boolean!
}

type Mutation {
  createConversation(participantIds: [String!]!): ConversationMutationResponse
  createNewMessage(messageInput: MessageInput!): MessageMutationResponse!
  createUsername(username: String!): UserMutationResponse!
}

interface MutationResponse {
  code: Float!
  message: String
  success: Boolean!
}

type Participant {
  hasUnseenLastestMessage: Boolean!
  participant: User!
}

type Query {
  getConversations: [Conversation!]!
  messages(conversationId: ID!): [Message!]!
  searchUsers(searchUsername: String!): [User!]!
}

type Subscription {
  subcribeNewConversationCreated: Conversation!
  subcribeNewMessageSent(conversationId: String!): Message!
}

type User {
  email: String!
  emailVerified: DateTime
  id: ID!
  image: String!
  name: String!
  username: String!
}

type UserMutationResponse implements MutationResponse {
  code: Float!
  message: String
  success: Boolean!
  user: User
}